template:
  # Battery-adjusted solar production
  - sensor:
      - name: "Solar Power (with efficiency loss)"
        unique_id: input_power_with_efficiency_loss_kW
        unit_of_measurement: "kW"
        device_class: power
        state_class: measurement
        state: >-
          {% set inverter_rating = 10000 %}  {# W #}
          {% set inpower = states('sensor.inverter_input_power') | float(0) %}

          {% if inpower < (inverter_rating * 0.1) %}
              {{ (inpower * 0.90 / 1000) | round(2) }}
          {% elif inpower < (inverter_rating * 0.2) %}
              {{ (inpower * 0.95 / 1000) | round(2) }}
          {% else %}
              {{ (inpower * 0.98 / 1000) | round(2) }}
          {% endif %}

  # House Power (excl. EV)
  - sensor:
      - name: "House Power (excl. EV)"
        unique_id: house_power_excl_ev
        unit_of_measurement: "kW"
        state: >
          {% set net_power = states('sensor.power_meter_active_power') | float(0) %}
          {% set import = -net_power if net_power < 0 else 0 %}
          {% set export = net_power if net_power > 0 else 0 %}

          {% set ev_sensor_id = states('input_text.ev_sensor') %}
          {% set ev_raw = states(ev_sensor_id) | float(0) if ev_sensor_id else 0 %}
          {% set ev = ev_raw / 1000 if ev_raw > 100 else ev_raw %}

          {# Use solar sensor from above #}
          {% set solar = states('sensor.input_power_with_efficiency_loss_kW') | float(0) %}

          {% set batt = states('sensor.batteries_charge_discharge_power') | float(0) %}
          {% set batt_out = -batt if batt < 0 else 0 %}
          {% set batt_in = batt if batt > 0 else 0 %}

          {% set house_power = (solar + import + batt_out) - (export + ev + batt_in) %}

          {{ [house_power, 0] | max | round(2) }}
